module.exports=function(n,t){"use strict";var r={};function __webpack_require__(t){if(r[t]){return r[t].exports}var c=r[t]={i:t,l:false,exports:{}};n[t].call(c.exports,c,c.exports,__webpack_require__);c.l=true;return c.exports}function startup(){return __webpack_require__(431)}return startup()}({66:function(n){n.exports=require("fs")},431:function(n,t,r){const c=r(66);const s=r(589);function log(n){console.log(`[dotenv][DEBUG] ${n}`)}const o="\n";const f=/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/;const p=/\\n/g;const i=/\n|\r|\r\n/;function parse(n,t){const r=Boolean(t&&t.debug);const c={};n.toString().split(i).forEach(function(n,t){const s=n.match(f);if(s!=null){const n=s[1];let t=s[2]||"";const r=t.length-1;const f=t[0]==='"'&&t[r]==='"';const i=t[0]==="'"&&t[r]==="'";if(i||f){t=t.substring(1,r);if(f){t=t.replace(p,o)}}else{t=t.trim()}c[n]=t}else if(r){log(`did not match key and value when parsing line ${t+1}: ${n}`)}});return c}function config(n){let t=s.resolve(process.cwd(),".env");let r="utf8";let o=false;if(n){if(n.path!=null){t=n.path}if(n.encoding!=null){r=n.encoding}if(n.debug!=null){o=true}}try{const n=parse(c.readFileSync(t,{encoding:r}),{debug:o});Object.keys(n).forEach(function(t){if(!Object.prototype.hasOwnProperty.call(process.env,t)){process.env[t]=n[t]}else if(o){log(`"${t}" is already defined in \`process.env\` and will not be overwritten`)}});return{parsed:n}}catch(n){return{error:n}}}n.exports.config=config;n.exports.parse=parse},589:function(n){n.exports=require("path")}});